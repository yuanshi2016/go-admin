package dto

import (
    "encoding/json"
    "go-admin/app/admin/models"
    "go-admin/common/dto"
    common "go-admin/common/models"

    "time"
)

type SysContractTokenGetPageReq struct {
	dto.Pagination     `search:"-"`
    ContractId int `form:"contractId"  search:"type:exact;column:contract_id;table:sys_contract_token" comment:"合约id"`
    TokenId int `form:"tokenId"  search:"type:exact;column:token_id;table:sys_contract_token" comment:"TokenID"`
    Amount int `form:"amount"  search:"type:exact;column:amount;table:sys_contract_token" comment:"数量"`
    Creator string `form:"creator"  search:"type:exact;column:creator;table:sys_contract_token" comment:"拥有者"`
    SysContractTokenOrder
}

type SysContractTokenOrder struct {
    Id int `form:"idOrder"  search:"type:order;column:id;table:sys_contract_token"`
    ContractId int `form:"contractIdOrder"  search:"type:order;column:contract_id;table:sys_contract_token"`
    TokenId int `form:"tokenIdOrder"  search:"type:order;column:token_id;table:sys_contract_token"`
    Amount int `form:"amountOrder"  search:"type:order;column:amount;table:sys_contract_token"`
    Name string `form:"nameOrder"  search:"type:order;column:name;table:sys_contract_token"`
    Description string `form:"descriptionOrder"  search:"type:order;column:description;table:sys_contract_token"`
    Properties string `form:"propertiesOrder"  search:"type:order;column:properties;table:sys_contract_token"`
    ImgUrl string `form:"imgUrlOrder"  search:"type:order;column:img_url;table:sys_contract_token"`
    Creator string `form:"creatorOrder"  search:"type:order;column:creator;table:sys_contract_token"`
    TransferAddress string `form:"transferAddress" search:"type:order;column:transfer_address;table:sys_contract_token"`
    TxHash string `form:"txHashOrder"  search:"type:order;column:tx_hash;table:sys_contract_token"`
    MetadataUrl string `form:"metadataUrlOrder"  search:"type:order;column:metadata_url;table:sys_contract_token"`
    MetadataContent string `form:"metadataContentOrder"  search:"type:order;column:metadata_content;table:sys_contract_token"`
    IsSync string `form:"isSyncOrder"  search:"type:order;column:is_sync;table:sys_contract_token"`
    IsDel string `form:"isDelOrder"  search:"type:order;column:is_del;table:sys_contract_token"`
    CopyrightOwner string `form:"copyrightOwner"  search:"type:order;column:copyright_owner;table:sys_contract_token"`
    Author string `form:"author"  search:"type:order;column:author;table:sys_contract_token"`
    Issuer string `form:"issuer"  search:"type:order;issuer:author;table:sys_contract_token"`
    IssuerDate time.Time `form:"issuerDate"  search:"type:order;column:Issuer_date;table:sys_contract_token"`
    TokenCid string `form:"tokenCid"  search:"type:order;column:token_cid;table:sys_contract_token"`
    CreatedAt time.Time `form:"createdAtOrder"  search:"type:order;column:created_at;table:sys_contract_token"`
    UpdatedAt time.Time `form:"updatedAtOrder"  search:"type:order;column:updated_at;table:sys_contract_token"`
    DeletedAt time.Time `form:"deletedAtOrder"  search:"type:order;column:deleted_at;table:sys_contract_token"`
    CreateBy string `form:"createByOrder"  search:"type:order;column:create_by;table:sys_contract_token"`
    UpdateBy string `form:"updateByOrder"  search:"type:order;column:update_by;table:sys_contract_token"`
    
}

func (m *SysContractTokenGetPageReq) GetNeedSearch() interface{} {
	return *m
}
type SysContractTokenToMitReq struct {
    Ids []int `json:"ids"`
}
func (s *SysContractTokenToMitReq) GetId() interface{} {
    return s.Ids
}
type SysContractTokenTransferReq struct {
    Ids []int `json:"ids"`
    Tx string `json:"tx"`
}
func (s *SysContractTokenTransferReq) GetId() interface{} {
    return s.Ids
}
func (s *SysContractTokenTransferReq) Generate(model *models.SysContractToken,service *models.SysContractTokenTransfer)  {
    model.Stock = service.Stock - 1
    model.Id = service.Id
    model.Amount = service.Amount
    model.Name = service.Name
    model.ContractId = service.ContractId
    model.TokenId = service.TokenId
    model.Description = service.Description
    model.Properties = service.Properties
    model.ImgUrl = service.ImgUrl
    model.Creator = service.Creator
    model.TxHash = service.TxHash
    model.MetadataUrl = service.MetadataUrl
    model.MetadataContent = service.MetadataContent
    model.IsSync = service.IsSync
    model.IsDel = service.IsDel
    model.CreatedAt = service.CreatedAt
    model.IssuerDate = service.IssuerDate
}
type SysContractTokenInsertReq struct {
    Id int `json:"-" comment:""` // 
    ContractId int `json:"contractId" comment:"合约id"` // 合约id
    TokenId int `json:"tokenId" comment:"TokenID"` // TokenID
    Amount int `json:"amount" comment:"数量"`
    Stock int `json:"stock" comment:"库存"`
    Name string `json:"name" comment:"名称"`
    Description string `json:"description" comment:"描述"`
    Properties string `json:"properties" comment:"属性"`
    ImgUrl string `json:"imgUrl" comment:"图标地址"`
    Creator string `json:"creator" comment:"拥有者"`
    TxHash string `json:"txHash" comment:"区块hash"`
    MetadataUrl string `json:"metadataUrl" comment:"资源url"`
    MetadataContent string `json:"metadataContent" comment:"资源内容"`
    IsSync int `json:"isSync" comment:"是否已发布"`
    IsDel string `json:"isDel" comment:""`
    CopyrightOwner string `json:"copyrightOwner" comment:"版权方"`
    Author string `json:"author" comment:"著作人"`
    Issuer string `json:"issuer" comment:"发行方"`
    IssuerDate time.Time    `json:"issuerDate" comment:"发行日期"`
    common.ControlBy
}

func (s *SysContractTokenInsertReq) Tojson() string  {
    data, _ := json.Marshal(s)
    return string(data)
}
func (s *SysContractTokenInsertReq) Generate(model *models.SysContractToken)  {
    if s.Id == 0 {
        model.Model = common.Model{ Id: s.Id }
    }
    model.Amount = s.Amount
    model.Stock = s.Amount// 库存初始值为发行值
    model.Name = s.Name
    model.ContractId = s.ContractId
    model.TokenId = s.TokenId
    model.Description = s.Description
    model.Properties = s.Properties
    model.ImgUrl = s.ImgUrl
    model.Creator = s.Creator
    model.TxHash = s.TxHash
    model.MetadataUrl = s.MetadataUrl
    model.MetadataContent = s.MetadataContent
    model.CreateBy = s.CreateBy
    model.IsSync = 0
    model.IsDel = s.IsDel
    model.CopyrightOwner = s.CopyrightOwner
    model.Author = s.Author
    model.Issuer = s.Issuer
    model.IssuerDate = s.IssuerDate
}

func (s *SysContractTokenInsertReq) GetId() interface{} {
	return s.TokenId
}

type SysContractTokenUpdateReq struct {
    Id int `uri:"id" comment:""` // 
    ContractId int `uri:"contractId" comment:"合约id"` // 合约id
    TokenId int `uri:"tokenId" comment:"TokenID"` // TokenID
    Amount int `json:"amount" comment:"数量"`
    Stock int `json:"stock" comment:"库存"`
    Name string `json:"name" comment:"名称"`
    Description string `json:"description" comment:"描述"`
    Properties string `json:"properties" comment:"属性"`
    ImgUrl string `json:"imgUrl" comment:"图标地址"`
    Creator string `json:"creator" comment:"拥有者"`
    TransferAddress string `json:"transferAddress" comment:"待转移地址"`
    TxHash string `json:"txHash" comment:"区块hash"`
    MetadataUrl string `json:"metadataUrl" comment:"资源url"`
    MetadataContent string `json:"metadataContent" comment:"资源内容"`
    IsSync int `json:"isSync" comment:"是否已发布"`
    IsDel string `json:"isDel" comment:""`
    CopyrightOwner string `json:"copyrightOwner" comment:"版权方"`
    Author string `json:"author" comment:"著作人"`
    Issuer string `json:"issuer" comment:"发行方"`
    IssuerDate time.Time    `json:"issuerDate" comment:"发行日期"`
    common.ControlBy
}

func (s *SysContractTokenUpdateReq) Generate(model *models.SysContractToken)  {
    if s.Id == 0 {
        model.Model = common.Model{ Id: s.Id }
    }
    model.Amount = s.Amount
    model.Stock = s.Stock
    model.Name = s.Name
    model.ContractId = s.ContractId
    model.TokenId = s.TokenId
    model.Description = s.Description
    model.Properties = s.Properties
    model.ImgUrl = s.ImgUrl
    model.Creator = s.Creator
    model.TransferAddress = s.TransferAddress
    model.TxHash = s.TxHash
    model.MetadataUrl = s.MetadataUrl
    model.MetadataContent = s.MetadataContent
    model.IsSync = s.IsSync
    model.UpdateBy = s.UpdateBy
    model.CreateBy = s.CreateBy
    model.IsDel = s.IsDel
    model.CopyrightOwner = s.CopyrightOwner
    model.Author = s.Author
    model.Issuer = s.Issuer
    model.IssuerDate = s.IssuerDate
}

func (s *SysContractTokenUpdateReq) GetId() interface{} {
	return s.Id
}

// SysContractTokenGetReq 功能获取请求参数
type SysContractTokenGetReq struct {
     Id int `uri:"id"`
     ContractId int `uri:"contractId"`
     TokenId int `uri:"tokenId"`
}
func (s *SysContractTokenGetReq) GetId() interface{} {
	return s.Id
}

// SysContractTokenDeleteReq 功能删除请求参数
type SysContractTokenDeleteReq struct {
	Ids []int `json:"ids"`
}

func (s *SysContractTokenDeleteReq) GetId() interface{} {
	return s.Ids
}